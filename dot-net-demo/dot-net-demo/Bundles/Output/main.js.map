{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/animation.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/dotNetDemoApp.component.ts","./src/app/components/dotNetDemoApp.component.html","./src/app/components/licenseTable/licenseTable.component.ts","./src/app/components/licenseTable/licenseTable.component.html","./src/app/components/organizationTable/organizationTable.component.ts","./src/app/components/organizationTable/organizationTable.component.html","./src/app/components/populate/populate.component.ts","./src/app/components/populate/populate.component.html","./src/app/components/services/license.service.ts","./src/app/components/services/organization.service.ts","./src/app/components/services/update.service.ts","./src/app/config.ts","./src/app/dotNetDemoApp-routing.module.ts","./src/app/dotNetDemoApp.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {\r\n  trigger,\r\n  style,\r\n  animate,\r\n  transition,\r\n  query,\r\n  group,\r\n  animateChild\r\n} from '@angular/animations';\r\n\r\nexport const slideInAnimation =\r\n  trigger('routeAnimations', [\r\n    transition('Dashboard <=> Populate', [\r\n      style({ position: 'relative' }),\r\n      query(':enter, :leave', [\r\n        style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          width: '100%'\r\n        })\r\n      ]),\r\n      query(':enter', [\r\n        style({ left: '-100%' })\r\n      ]),\r\n      query(':leave', animateChild()),\r\n      group([\r\n        query(':leave', [\r\n          animate('300ms ease-out', style({ left: '100%' }))\r\n        ]),\r\n        query(':enter', [\r\n          animate('300ms ease-out', style({ left: '0%' }))\r\n        ])\r\n      ]),\r\n      query(':enter', animateChild()),\r\n    ])\r\n  ]);\r\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent {\n}\n","<div class=\"row\">\r\n  <div class=\"col-md-12\">\r\n    <div class=\"panel panel-default\">\r\n      <div class=\"panel-body\">\r\n        <h1 class=\"text-center\">Dashboard</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-md-12\">\r\n    <div class=\"panel panel-default\">\r\n      <div class=\"panel-heading\">Licenses</div>\r\n      <div class=\"panel-body\">\r\n        <license-table></license-table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-md-8\">\r\n    <div class=\"panel panel-default\">\r\n      <div class=\"panel-heading\">Organizations</div>\r\n      <div class=\"panel-body\">\r\n        <organization-table></organization-table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\nimport { slideInAnimation } from '../animation';\nimport { RouterOutlet } from '@angular/router';\r\n\n@Component({\n  selector: 'dot-net-demo-app-root',\n  templateUrl: './dotNetDemoApp.component.html',\n  styleUrls: ['./dotNetDemoApp.component.scss'],\n  animations: [\n    slideInAnimation\n  ]\n})\nexport class DotNetDemoAppComponent {\n  prepareRoute(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData['animation'];\n  }\n}\n","<nav class=\"navbar navbar-default\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"navbar-header\">\r\n      <span class=\"navbar-brand\">Dot-Net-Demo</span>\r\n    </div>\r\n    <ul class=\"nav navbar-nav\">\r\n      <li routerLinkActive=\"active\"><a routerLink=\"/dashboard\">Dashboard</a></li>\r\n      <li routerLinkActive=\"active\"><a routerLink=\"/populate\">Populate</a></li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n<div [@routeAnimations]=\"prepareRoute(outlet)\">\r\n  <router-outlet #outlet=\"outlet\"></router-outlet>\r\n</div>\r\n\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { License } from '../../models/license';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { LicenseService } from '../services/license.service';\r\n\r\n@Component({\r\n  selector: 'license-table',\r\n  templateUrl: './licenseTable.component.html',\r\n  styleUrls: ['./licenseTable.component.scss']\r\n})\r\nexport class LicenseTableComponent implements OnInit {\r\n  constructor(private licenseService: LicenseService) { }\r\n  dataSource: MatTableDataSource<License>;\r\n  displayedColumns: string[] = ['status', 'title', 'domain_data',\r\n    'is_okd_compliant', 'is_generic', 'is_osi_compliant', 'domain_content', 'domain_software', 'id'];\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\r\n  ngOnInit(): void {\r\n    let licenses = [] as Array<License>;\r\n    this.dataSource = new MatTableDataSource<License>(licenses);\r\n    this.licenseService.getLicenses().subscribe(_res => {\r\n      if (_res.Success) {\r\n        this.dataSource = new MatTableDataSource<License>(_res.Result);\r\n        this.dataSource.paginator = this.paginator;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"mat-elevation-z8\">\r\n  <table mat-table [dataSource]=\"dataSource\">\r\n    <ng-container matColumnDef=\"status\">\r\n      <th mat-header-cell *matHeaderCellDef> Status </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"title\">\r\n      <th mat-header-cell *matHeaderCellDef> Title </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"domain_data\">\r\n      <th mat-header-cell *matHeaderCellDef> Domain data </th>\r\n      <td mat-cell *matCellDef=\"let element\"> <mat-checkbox [disabled]=\"'true'\" [checked]=\"element.domain_data\"></mat-checkbox></td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"is_okd_compliant\">\r\n      <th mat-header-cell *matHeaderCellDef> Is okd compliant </th>\r\n      <td mat-cell *matCellDef=\"let element\"> <mat-checkbox [disabled]=\"'true'\" [checked]=\"element.is_okd_compliant\"></mat-checkbox></td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"is_generic\">\r\n      <th mat-header-cell *matHeaderCellDef> Is generic </th>\r\n      <td mat-cell *matCellDef=\"let element\"> <mat-checkbox [disabled]=\"'true'\" [checked]=\"element.is_generic\"></mat-checkbox></td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"is_osi_compliant\">\r\n      <th mat-header-cell *matHeaderCellDef> Is osi compliant </th>\r\n      <td mat-cell *matCellDef=\"let element\"> <mat-checkbox [disabled]=\"'true'\" [checked]=\"element.is_osi_compliant\"></mat-checkbox></td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"domain_content\">\r\n      <th mat-header-cell *matHeaderCellDef> Domain content </th>\r\n      <td mat-cell *matCellDef=\"let element\"> <mat-checkbox [disabled]=\"'true'\" [checked]=\"element.domain_content\"></mat-checkbox></td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"domain_software\">\r\n      <th mat-header-cell *matHeaderCellDef> Domain software </th>\r\n      <td mat-cell *matCellDef=\"let element\"> <mat-checkbox [disabled]=\"'true'\" [checked]=\"element.domain_software\"></mat-checkbox></td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef> Id </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\r\n    </ng-container>\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { OrganizationService } from '../services/organization.service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Organization } from '../../models/organization';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\n\r\n@Component({\r\n  selector: 'organization-table',\r\n  templateUrl: './organizationTable.component.html',\r\n  styleUrls: ['./organizationTable.component.scss']\r\n})\r\nexport class OrganizationTableComponent implements OnInit {\r\n  constructor(private organizationService: OrganizationService) { }\r\n  dataSource: MatTableDataSource<Organization>;\r\n  displayedColumns: string[] = ['id', 'name'];\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\r\n  ngOnInit(): void {\r\n    let organizations = [] as Array<Organization>;\r\n    this.dataSource = new MatTableDataSource<Organization>(organizations);\r\n    this.organizationService.getOrganizations().subscribe(_res => {\r\n      if (_res.Success) {\r\n        this.dataSource = new MatTableDataSource<Organization>(_res.Result);\r\n        this.dataSource.paginator = this.paginator;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"mat-elevation-z8\">\r\n  <table mat-table [dataSource]=\"dataSource\">\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef> Id </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef> Name </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n","import { Component } from '@angular/core';\nimport { UpdateService } from '../services/update.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\n@Component({\n  templateUrl: './populate.component.html',\n  styleUrls: ['./populate.component.scss']\n})\nexport class PopulateComponent {\n  selectedValue: string;\n  unblock: boolean;\n  params: any[] = [\n    { value: 'organization_list' },\n    { value: 'license_list' }\n  ];\n\n  constructor(private updateService: UpdateService, private matShackBar: MatSnackBar) {\n    this.unblock = true;\n  }\n\n  updateDate() {\n    this.unblock = false;\n    this.updateService.updateData(this.selectedValue).subscribe(res => {\r\n      if (res.Success) {\r\n        this.matShackBar.open(`${this.selectedValue} have been updated successfully!`, null, { duration: 2000 });\r\n        this.unblock = true;\r\n      }\r\n    })\r\n  }\n\n  changeValue(value) {\n    this.selectedValue = value;\r\n  }\n\n}\n","<div class=\"row\">\r\n  <div class=\"col-md-12\">\r\n    <div class=\"panel panel-default\">\r\n      <div class=\"panel-body\">\r\n        <h1 class=\"text-center\">Populate</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-md-12\">\r\n    <div class=\"panel panel-default\">\r\n      <div class=\"panel-body\">\r\n        <span>http://catalog.data.gov/api/3/action/</span>\r\n        <mat-form-field>\r\n          <mat-label>select params</mat-label>\r\n          <mat-select [(ngModel)]=\"selectedValue\">\r\n            <mat-option *ngFor=\"let param of params\" [value]=\"param.value\">\r\n              {{param.value}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n        <button class=\"btn-update\" (click)=\"updateDate()\" [disabled]=\"!selectedValue || !unblock\" mat-raised-button>Update</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { License } from '../../models/license';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Config } from '../../config';\r\nimport { Response } from '../../models/response';\r\n\r\n@Injectable()\r\nexport class LicenseService {\r\n  constructor(private http: HttpClient, private config: Config) { }\r\n\r\n  getLicenses() {\r\n    return this.http.get<Response>(this.config.api_license_url);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Config } from '../../config';\r\nimport { Response } from '../../models/response';\r\n\r\n@Injectable()\r\nexport class OrganizationService {\r\n  constructor(private http: HttpClient, private config: Config) { }\r\n  \r\n  getOrganizations() {\r\n    return this.http.get<Response>(this.config.api_organization_url);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Config } from '../../config';\r\nimport { Response } from '../../models/response';\r\n\r\n@Injectable()\r\nexport class UpdateService {\r\n  constructor(private http: HttpClient, private config: Config) { }\r\n\r\n  updateData(action: string) {\r\n    return this.http.put<Response>(this.config.api_update_url, { action: action });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class Config {\r\n  data_base_url: string;\r\n  api_base_url: string;\r\n  api_organization_url: string;\r\n  api_license_url: string;\r\n  api_update_url: string;\r\n  constructor() {\r\n    this.data_base_url = 'http://catalog.data.gov/api/3/action/';\r\n    this.api_base_url = 'http://10.211.55.3/dot-net-demo/api';\r\n    this.api_organization_url = `${this.api_base_url}/organization`;\r\n    this.api_license_url = `${this.api_base_url}/license`;\r\n    this.api_update_url = `${this.api_base_url}/update`;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { PopulateComponent } from './components/populate/populate.component';\n\n\nconst routes: Routes = [\n  { path: 'dashboard', component: DashboardComponent, data: { animation: 'Dashboard'} },\n  { path: 'populate', component: PopulateComponent, data: { animation: 'Populate' } },\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { enableTracing: false, useHash: true })],\n  exports: [RouterModule]\n})\nexport class DotNetDemoAppRoutingModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DotNetDemoAppRoutingModule } from './dotNetDemoApp-routing.module';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { FormsModule } from '@angular/forms';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { DotNetDemoAppComponent } from './components/dotNetDemoApp.component';\nimport { OrganizationTableComponent } from './components/organizationTable/organizationTable.component';\nimport { OrganizationService } from './components/services/organization.service';\r\nimport { LicenseTableComponent } from './components/licenseTable/licenseTable.component';\r\nimport { LicenseService } from './components/services/license.service';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { PopulateComponent } from './components/populate/populate.component';\r\nimport { Config } from './config';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { UpdateService } from './components/services/update.service';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\n\r\n\r\n\n@NgModule({\n  declarations: [\n    DotNetDemoAppComponent, OrganizationTableComponent, LicenseTableComponent, DashboardComponent, PopulateComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatCheckboxModule,\n    FormsModule,\n    MatSelectModule,\n    MatButtonModule,\n    HttpClientModule,\n    MatSnackBarModule,\n    DotNetDemoAppRoutingModule\n  ],\n  providers: [OrganizationService, LicenseService, Config, UpdateService],\n  bootstrap: [DotNetDemoAppComponent]\n})\nexport class DotNetDemoAppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { DotNetDemoAppModule } from './app/dotNetDemoApp.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(DotNetDemoAppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}